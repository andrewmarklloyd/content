[
	{
		"projectType": "workProjects",
		"projectTypeDisplayName": "Work Projects",
		"projectsData": [
			{
				"name": "status",
				"displayName": "S.T.A.T.U.S. Board",
				"description": "I led my team in architecting and developing a team status dashboard. The Angular 4 dashboard is updated in real time with via the Sockets.io connection to a Node.js server. The server makes periodic requests to GitLab, Bugzilla, Google Calendar, QA servers, and a Postgres database to aggregate data and send to the front end.",
				"graphic": "assets/projects/status.png"
			},
			{
				"name": "infographics",
				"displayName": "MKC Infographic",
				"description": "One of the more rewarding projects I've been a part of, the interactive infographics aims to engage and inform military kids and youth about post-traumatic stress disorder and traumatic brain injury. I helped develop the API for the Ember.js front end to connect to. I also took over as technical lead during devevelopment of this project.",
				"link": "http://militarykidsconnect.dcoe.mil/what-is-ptsd/"
			},
			{
				"name": "messageBoard",
				"displayName": "MKC Message Board",
				"description": "The Military Kids Connect message board allows kids to talk about their unique experiences. In my first project as a web devloper, I helped build the API for getting and submitting threads as well as managing the user profile information.",
				"link": "http://militarykidsconnect.dcoe.mil/mboard/"
			},
			{
				"name": "brightcoveApi",
				"displayName": "Brightcove API",
				"description": "A small tool to use Brightcove's API that re-transcodes videos. This saved me time from using the UI to manually click through over 300 videos.",
				"link": "https://github.com/andrewmarklloyd/brightcove-api"
			},
			{
				"name": "dockerMkc",
				"displayName": "Dockerized Developement Environment",
				"description": "Our Drupal, IIS, and SQL Server stack was very difficult to locally configure and was wasting a lot of developer time. I created Dockerized development environment and accompanying scripts allowing developers to have an up and running environment in minutes."
			},
			{
				"name": "jenkinsBuildRelease",
				"displayName": "Automated Deployment Package",
				"description": "Our deployment process was unstable, error prone, and more accurately non-existent. It involved estimating the last code deployment date, performing a git diff of the current code base and that commit, and manually filtering out files that didn't need to be deployed. Things got more complicated when two different JS frameworks that required build processes were introduced to the repository. I organized my team to coordinate a Gitlab and Jenkins pipeline to build our deployment package.",
				"graphic": "assets/projects/Jenkins_Build_Release.png"
			},
			{
				"name": "gitgraph",
				"displayName": "Interactive Git Diagrams",
				"description": "In order to standardize git workflows between all teams in my organization, I built a small web app to display interactive git branching and merging illustrations for each team using Gitgraph.js",
				"graphic": "assets/projects/mkc-branching.gif"
			}
		]
	},
	{
		"projectType": "sideProjects",
		"projectTypeDisplayName": "Side Projects",
		"projectsData": [
			{
				"name": "spotifyBot",
				"displayName": "Spotify Bot",
				"description": "This is one of my favorite tools that I wrote and I use it almost every day. Mondays and Fridays Spotify's algorithm builds personalized playlists for me. This bot cross references songs in these playlists against songs that I've added to my library and adds them to a new playlist. This allows me to store all of the songs in these playlists that I like. Click the link below to show the playlist.",
				"embed": {
					"buttonText": "Toggle Playlist"
				}
			},
			{
				"name": "rokuRemote",
				"displayName": "ROKU Wifi Remote",
				"description": "When my dog Einstein chewed my Roku remote to pieces I was too lazy to buy a new remote. However, I wasn't too lazy to research the Roku external control HTTP API and build a web remote served from my Raspberry Pi."
			}
		]
	},
	{
		"projectType": "openSource",
		"projectTypeDisplayName": "Open Source",
		"projectsData": [
			{
				"name": "sedailyApi",
				"displayName": "Software Engineering Daily API"
			},
			{
				"name": "sedailyEvents",
				"displayName": "Software Engineering Daily Event Stream"
			}
		]
	},
	{
		"projectType": "other",
		"projectTypeDisplayName": "Other",
		"projectsData": [
			{
				"name": "plaWebmaster",
				"displayName": "Professional Loadmaster Association Webmaster",
				"description": "",
				"link": "https://www.loadmaster.com/"
			}
		]
	}
]