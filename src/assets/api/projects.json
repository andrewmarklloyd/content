[
	{
		"projectType": "workProjects",
		"projectTypeDisplayName": "Work Projects",
		"projectsData": [
			{
				"name": "status",
				"displayName": "S.T.A.T.U.S. Board",
				"description": "I led my team in architecting, designing, and developing a team status dashboard. The dashboard displays information that is updated continuously with asynchronous request handling via the sockets.io Javascript library. The stack is Angular 4 front end with a Node.js and Postgres API server. The backend server makes periodic requests to  update the front end with new data. Its cron-type scheduling makes calls to our GitLab API for open issues, merge requests, and build statuses. The server also uses Bugzilla’s API to collect bug information as well as maintain team member’s in/out status, QA server uptime stats, and project progress stats. We also threw in the three day forecast and travel times to four cities using Google API’s. Each component is entirely separate and is updated as its data is returned from the backend."
			},
			{
				"name": "infographics",
				"displayName": "MKC Infographic",
				"description": "I took over as tech lead during dev of this project.",
				"link": "http://militarykidsconnect.dcoe.mil/what-is-ptsd/"
			},
			{
				"name": "messageBoard",
				"displayName": "MKC Message Board",
				"description": "My first project as a web devloper at T2. I helped build the API for getting and submitting threads, as well as managing the user profile information.",
				"link": "http://militarykidsconnect.dcoe.mil/mboard/"
			},
			{
				"name": "brightcoveApi",
				"displayName": "Brightcove API",
				"description": "A small tool to use Brightcove's API that re-transcodes videos. This saved me time from using the UI to manually click through over 300 videos.",
				"link": "https://github.com/andrewmarklloyd/brightcove-api"
			},
			{
				"name": "dockerMkc",
				"displayName": "Dockerized Developement Environment",
				"description": "Our stack was very difficult to locally configure and was wasting a lot of developer time. I created dockerized dev environment.",
				"link": ""
			},
			{
				"name": "jenkinsBuildRelease",
				"displayName": "Automated Deployment Package",
				"description": "Our deployment 'process,' if that's what you call it, was unstable, error prone, and more accurately non-existent. I organized my team to coordinate a Gitlab and Jenkins combined job to build our deployment package.",
				"link": ""
			},
			{
				"name": "gitgraph",
				"displayName": "Interactive Git Diagrams",
				"description": "I built a small web app to display interactive git branching and merging illustrations using Gitgraph.js",
				"link": ""
			}
		]
	},
	{
		"projectType": "sideProjects",
		"projectTypeDisplayName": "Side Projects",
		"projectsData": [
			{
				"name": "spotifyBot",
				"displayName": "Spotify Bot"
			},
			{
				"name": "rokuRemote",
				"displayName": "ROKU Wifi Remote"
			}
		]
	},
	{
		"projectType": "openSource",
		"projectTypeDisplayName": "Open Source",
		"projectsData": [
			{
				"name": "sedailyApi",
				"displayName": "Software Engineering Daily API"
			},
			{
				"name": "sedailyEvents",
				"displayName": "Software Engineering Daily Event Stream"
			}
		]
	},
	{
		"projectType": "other",
		"projectTypeDisplayName": "Other",
		"projectsData": [
			{
				"name": "plaWebmaster",
				"displayName": "Professional Loadmaster Association Webmaster",
				"description": "",
				"link": "https://www.loadmaster.com/"
			}
		]
	}
]