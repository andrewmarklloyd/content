[
	{
		"projectType": "workProjects",
		"projectTypeDisplayName": "Work Projects",
		"projectsData": [
			{
				"name": "status",
				"displayName": "S.T.A.T.U.S. Board",
				"description": "I led my team in architecting and developing a team status dashboard. The Angular 4 dashboard is updated in real time via a Socket.io connection to a Node.js server. The server makes periodic requests to GitLab, Bugzilla, Google Calendar, multiple QA servers, and a Postgres database to aggregate data and send to the front end.",
				"graphic": "assets/projects/status.png"
			},
			{
				"name": "infographics",
				"displayName": "MKC Infographic",
				"description": "One of the more rewarding projects I've been a part of, the interactive infographics aims to engage and inform military kids and youth about post-traumatic stress disorder and traumatic brain injury. I helped develop the API for the Ember.js front end to connect to. I also took over as technical lead during devevelopment of this project.",
				"link": "http://militarykidsconnect.dcoe.mil/what-is-ptsd/"
			},
			{
				"name": "messageBoard",
				"displayName": "MKC Message Board",
				"description": "The Military Kids Connect message board allows kids to talk about their unique experiences. In my first project as a web devloper, I helped build the API for getting and submitting messages as well as managing the user profile information.",
				"link": "http://militarykidsconnect.dcoe.mil/mboard/"
			},
			{
				"name": "brightcoveApi",
				"displayName": "Brightcove API",
				"description": "A small tool that uses Brightcove's API to re-transcode videos. This saved me a ton of time from using the UI to manually click through over 300 videos to apply a new watermark.",
				"link": "https://github.com/andrewmarklloyd/brightcove-api"
			},
			{
				"name": "dockerMkc",
				"displayName": "Dockerized Developement Environment",
				"description": "My team's Drupal, IIS, and SQL Server stack was very difficult to locally configure and was wasting a lot of developer time. I created Dockerized development environment and accompanying scripts allowing developers to have an up and running environment in minutes."
			},
			{
				"name": "jenkinsBuildRelease",
				"displayName": "Automated Deployment Package",
				"description": "My team's deployment process was unstable, error prone, and more accurately non-existent. It involved estimating the last code deployment date, performing a git diff of the current code base and that commit, and manually filtering out files that didn't need to be deployed. Things got more even complicated when two different JS frameworks that required build processes were introduced to the repository. I organized my team to coordinate a Gitlab and Jenkins pipeline to build our deployment package.",
				"graphic": "assets/projects/Jenkins_Build_Release.png"
			},
			{
				"name": "gitgraph",
				"displayName": "Interactive Git Diagrams",
				"description": "In order to standardize git workflows between all teams in my organization, I built a small web app to display interactive git branching and merging illustrations for each team using Gitgraph.js",
				"graphic": "assets/projects/mkc-branching.gif"
			}
		]
	},
	{
		"projectType": "sideProjects",
		"projectTypeDisplayName": "Side Projects",
		"projectsData": [
			{
				"name": "spotifyBot",
				"displayName": "Spotify Bot",
				"description": "This is one of my favorite tools that I wrote and I use it almost every day. Mondays and Fridays Spotify's algorithm builds personalized playlists for me. This bot cross references songs in these playlists against songs that I've added to my library and adds them to a new playlist. This allows me to store all of the songs in these playlists that I like. The app is currently hosted on my Raspberry Pi. I am now implementing this bot as a full web application available for anyone to use. Click the button below to display the playlist or click the link to see the source code.",
				"embed": {
					"buttonText": "Toggle Playlist"
				},
				"link": "https://github.com/andrewmarklloyd/spotify-playlist-manager"
			},
			{
				"name": "aircrewApp",
				"displayName": "Aircrew Application",
				"description": "I was originially developing an Ionic (Cordova+Angularjs) quiz application targeted at increasing aviation knowledge among USAF aircrew. I'm extending it to not only include the quiz but other features like recipes made specifically for the C-17 and a customizable packing list. Click the link below to see a beta version of the app.",
				"link": "https://mqf.herokuapp.com/"
			},
			{
				"name": "rokuRemote",
				"displayName": "ROKU Wifi Remote",
				"description": "When my dog Einstein chewed my Roku remote to pieces I was too lazy to buy a new remote. However, I wasn't too lazy to research the Roku external control HTTP API and build a web page remote served from my Raspberry Pi. Now I use it all of the time when I am too lazy to grab the remote."
			}
		]
	},
	{
		"projectType": "openSource",
		"projectTypeDisplayName": "Open Source",
		"projectsData": [
			{
				"name": "sedailyEvents",
				"displayName": "Software Engineering Daily Event Stream",
				"description": "The SEDaily event stream is responsible for authenticating connecting clients and validating event payload schemas before putting the event on the SED event bus. Interested clients can subscribe to events on the stream. I helped architect, build, and deploy this service. It was definitely one of my favorite projects to be a part of.",
				"link": "https://github.com/SoftwareEngineeringDaily/sedaily-devops"
			},
			{
				"name": "sedailySlackBot",
				"displayName": "Software Engineering Daily Slack Bot",
				"description": "I built a Slack App for the SEDaily team. The first feature implemented responds to new users joining the sed_app_development channel with a DM giving them information on contributing and links to project issues labeled 'good first issue'. Other features include a slash command that gets a Grafana snapshot URL for the monthly event summaries from the event stream database as well as others in development. The Slack app is deployed using http://webtask.io.",
				"link": "https://github.com/andrewmarklloyd/webtasks/blob/master/sedaily/index.js"
			},
			{
				"name": "sedailyApi",
				"displayName": "Software Engineering Daily API",
				"description": "The backend services and API for the Software Engineering Daily iOS, Android, and web platforms. This project was my first time contributing to an open source project.",
				"link": "https://github.com/SoftwareEngineeringDaily/software-engineering-daily-api"
			}
		]
	},
	{
		"projectType": "other",
		"projectTypeDisplayName": "Other",
		"projectsData": [
			{
				"name": "loadmaster",
				"displayName": "USAF Reserve Loadmaster",
				"description": "I have served 4 years of active duty and over 8 years of Reserve duty as a C-17A loadmaster where I am responsible for properly loading, securing and escorting cargo and passengers. From calculating proper weight distribution to providing for passenger comfort throughout the flight, I ensure everything and everyone is safe and secure on flights all over the world. In addition to flight duties I am the squadron career advisor where I advise squadron members on career progression and planning, determine reenlistment eligibility, and discussing additional military career options.",
				"link": "https://en.wikipedia.org/wiki/Loadmaster"
			},
			{
				"name": "plaWebmaster",
				"displayName": "Professional Loadmaster Association Webmaster",
				"description": "The PLA is a non-profit organization dedicated to bringing the loadmaster community together. I recently became the webmaster of the PLA where I'm not only in charge of the website but I'm leading the migration from disparate Excel files and Word docs to a managed membership service.",
				"link": "https://www.loadmasters.com/"
			}
		]
	}
]
